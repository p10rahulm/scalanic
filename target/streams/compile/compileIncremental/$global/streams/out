[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(E:\Learn\Scala\src\main\scala\scriptFile.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(E:\Learn\Scala\src\main\scala\WaterPouringProblem.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(E:\Learn\Scala\src\main\scala\WaterPouringProblem.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to E:\Learn\Scala\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 549a58f0 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\rmaddy\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	E:\Learn\Scala\target\scala-2.12\classes;C:\Users\rmaddy\.ivy2\cache\org.scala-lang.modules\scala-parser-combinators_2.12\bundles\scala-parser-combinators_2.12-1.0.4.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.747193854 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Pouring.Fill...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Pouring.Fill)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Pouring.Fill)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Pouring.Fill,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(compose,[Default]), UsedName(change,[Default]), UsedName(Pouring;Fill;init;,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName(Fill,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(andThen,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(##,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(apply,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(unapply,[Default]), UsedName(glass,[Default]), UsedName(hashCode,[Default]))) invalidates 1 classes due to The Pouring.Fill has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(eq,[Default]), UsedName(compose,[Default]), UsedName(change,[Default]), UsedName(Pouring;Fill;init;,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName(Fill,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(andThen,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(##,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(apply,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(unapply,[Default]), UsedName(glass,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Pouring.Fill)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Pouring.Path...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Pouring.Path)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Pouring.Path)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Pouring.Path,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(endState,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(Pouring;Path;init;,[Default]), UsedName(##,[Default]), UsedName(Path,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(extend,[Default]), UsedName(hashCode,[Default]))) invalidates 1 classes due to The Pouring.Path has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(eq,[Default]), UsedName(endState,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(Pouring;Path;init;,[Default]), UsedName(##,[Default]), UsedName(Path,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(extend,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Pouring.Path)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Pouring.Pour...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Pouring.Pour)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Pouring.Pour)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Pouring.Pour,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(change,[Default]), UsedName(curried,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(from,[Default]), UsedName(clone,[Default]), UsedName(Pour,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(to,[Default]), UsedName(##,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(apply,[Default]), UsedName(Pouring;Pour;init;,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(unapply,[Default]), UsedName(copy$default$2,[Default]), UsedName(hashCode,[Default]))) invalidates 1 classes due to The Pouring.Pour has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(eq,[Default]), UsedName(change,[Default]), UsedName(curried,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(from,[Default]), UsedName(clone,[Default]), UsedName(Pour,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(to,[Default]), UsedName(##,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(apply,[Default]), UsedName(Pouring;Pour;init;,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(unapply,[Default]), UsedName(copy$default$2,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Pouring.Pour)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Pouring.Empty...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Pouring.Empty)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Pouring.Empty)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Pouring.Empty,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(compose,[Default]), UsedName(change,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(andThen,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Empty,[Default]), UsedName(copy,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(##,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(apply,[Default]), UsedName(Pouring;Empty;init;,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(unapply,[Default]), UsedName(glass,[Default]), UsedName(hashCode,[Default]))) invalidates 1 classes due to The Pouring.Empty has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(eq,[Default]), UsedName(compose,[Default]), UsedName(change,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName($init$,[Default]), UsedName(productPrefix,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(andThen,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Empty,[Default]), UsedName(copy,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(##,[Default]), UsedName(canEqual,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(apply,[Default]), UsedName(Pouring;Empty;init;,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(productArity,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(unapply,[Default]), UsedName(glass,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Pouring.Empty)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Pouring.Move...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Pouring.Move)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Pouring.Pour by Pouring.Move[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Pouring.Fill by Pouring.Move[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding Pouring.Empty by Pouring.Move[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Pouring.Empty, Pouring.Move, Pouring.Fill, Pouring.Pour)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Pouring.Move,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(change,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(Move,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]))) invalidates 4 classes due to The Pouring.Move has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(eq,[Default]), UsedName(change,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(Move,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Pouring.Empty, Pouring.Move, Pouring.Fill, Pouring.Pour)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Pouring...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Pouring)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Pouring)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Pouring,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(solution,[Default]), UsedName(glasses,[Default]), UsedName(from,[Default]), UsedName(clone,[Default]), UsedName(Fill,[Default]), UsedName(initialState,[Default]), UsedName(Pour,[Default]), UsedName(ne,[Default]), UsedName(State,[Default]), UsedName(Pouring;init;,[Default]), UsedName(main,[Default]), UsedName(pathSets,[Default]), UsedName(Move,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Empty,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(Path,[Default]), UsedName(initialPath,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(moves,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(Pouring,[Default]))) invalidates 1 classes due to The Pouring has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(asInstanceOf,[Default]), UsedName(solution,[Default]), UsedName(glasses,[Default]), UsedName(from,[Default]), UsedName(clone,[Default]), UsedName(Fill,[Default]), UsedName(initialState,[Default]), UsedName(Pour,[Default]), UsedName(ne,[Default]), UsedName(State,[Default]), UsedName(Pouring;init;,[Default]), UsedName(main,[Default]), UsedName(pathSets,[Default]), UsedName(Move,[Default]), UsedName($isInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Empty,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(Path,[Default]), UsedName(initialPath,[Default]), UsedName(!=,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(moves,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(Pouring,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Pouring)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
