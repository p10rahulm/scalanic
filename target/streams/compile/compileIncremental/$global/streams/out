[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(E:\Learn\Scala\src\main\scala\scriptFile.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(E:\Learn\Scala\src\main\scala\ListOperations.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(E:\Learn\Scala\src\main\scala\Huffman.scala, E:\Learn\Scala\src\main\scala\tweetSet.scala, E:\Learn\Scala\src\main\scala\ConsList.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(GoogleVsApple, Nil, MyListOperations, Huffman.Fork, mycons, Huffman.CodeTree, TweetList, Huffman, Cons, Empty, Huffman.Leaf, Tweet, TweetSet, Main, MyList, mynil, NonEmpty)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(GoogleVsApple, Nil, MyListOperations, Huffman.Fork, mycons, Huffman.CodeTree, TweetList, Huffman, Cons, Empty, Huffman.Leaf, Tweet, TweetSet, Main, MyList, mynil, NonEmpty)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(E:\Learn\Scala\src\main\scala\ListOperations.scala, E:\Learn\Scala\src\main\scala\Huffman.scala, E:\Learn\Scala\src\main\scala\tweetSet.scala, E:\Learn\Scala\src\main\scala\ConsList.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 4 Scala sources to E:\Learn\Scala\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 4de2f923 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\rmaddy\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	E:\Learn\Scala\target\scala-2.12\classes;C:\Users\rmaddy\.ivy2\cache\org.scala-lang.modules\scala-parser-combinators_2.12\bundles\scala-parser-combinators_2.12-1.0.4.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.969003116 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ConsListOperations...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ConsListOperations)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ConsListOperations)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ConsListOperations,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(nth,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ConsListOperations,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(singleton,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The ConsListOperations has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(nth,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ConsListOperations,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(singleton,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ConsListOperations)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ListOperations...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ListOperations)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ListOperations)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ListOperations,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(init,[Default]), UsedName(asInstanceOf,[Default]), UsedName(last,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(ListOperations,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The ListOperations has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(init,[Default]), UsedName(asInstanceOf,[Default]), UsedName(last,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(ListOperations,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ListOperations)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mynil...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(mynil)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mynil)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mynil,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(mynil,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(mynil;init;,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The mynil has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(mynil,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(mynil;init;,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(mynil)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Cons...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Cons,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(Cons,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(Cons;init;,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(foreach,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The Cons has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(Cons,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(Cons;init;,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(foreach,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mycons...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(mycons)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mycons)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mycons,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(mycons,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(mycons;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The mycons has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(mycons,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(mycons;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(mycons)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from TweetNil...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(TweetNil)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(TweetNil)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(TweetNil,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(TweetNil,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(foreach,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The TweetNil has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(TweetNil,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(foreach,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(TweetNil)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from nil...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(nil)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(nil)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(nil,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(nil,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(nil;init;,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The nil has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(nil,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(nil;init;,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(nil)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from MyListOperations...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(MyListOperations)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(MyListOperations)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(MyListOperations,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(MyListOperations,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(nth,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(singleton,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The MyListOperations has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(MyListOperations,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(nth,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName($isInstanceOf,[Default]), UsedName(singleton,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(MyListOperations)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from cons...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(cons)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(cons)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(cons,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(cons;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName(cons,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The cons has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(cons;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName(cons,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(cons)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from ConsList...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ConsList)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding cons by ConsList[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding nil by ConsList[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(ConsList, cons, nil)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(ConsList,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ConsList,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 3 classes due to The ConsList has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName(ConsList,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(ConsList, cons, nil)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from MyList...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(MyList)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(MyList)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(MyList,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(MyList,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The MyList has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(MyList,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(MyList)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Nil...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Nil)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Nil)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Nil,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(foreach,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName(Nil,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The Nil has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(foreach,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName(Nil,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Nil)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from TweetCons...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(TweetCons)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(TweetCons)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(TweetCons,ModifiedNames(changes = UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(TweetCons;init;,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(foreach,[Default]), UsedName(TweetCons,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The TweetCons has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(notify,[Default]), UsedName(isEmpty,[Default]), UsedName(head,[Default]), UsedName(hashCode,[Default]), UsedName(TweetCons;init;,[Default]), UsedName(eq,[Default]), UsedName(clone,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(synchronized,[Default]), UsedName(foreach,[Default]), UsedName(TweetCons,[Default]), UsedName($init$,[Default]), UsedName(isInstanceOf,[Default]), UsedName(getClass,[Default]), UsedName(equals,[Default]), UsedName(tail,[Default]), UsedName($isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(TweetCons)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
